# The complete functionality of Sixel.jl consists of four parts:
#
# 1. [libsixel_jll], the pre-built [libsixel] artifacts using [BinaryBuilder]
# 2. `src/Sixel_CModule.jl`, the C wrapper generated by [Clang.jl] using `gen/`
# 3. The julia interfaces that hides the C details, with appripriate docs and tests. It
#    includes the encoding/decoding support to colorant array and PNG file.
# 4. support to drawable/plotable types that can be converted to PNG or plain array content.
#
# # Links
# 
# [libsixel_jll]: https://github.com/JuliaBinaryWrappers/libsixel_jll.jl
# [libsixel]: https://github.com/saitoha/libsixel
# [BinaryBuilder]: https://github.com/JuliaPackaging/BinaryBuilder.jl
# [Clang.jl]: https://github.com/JuliaInterop/Clang.jl
module Sixel

using Colors, FixedPointNumbers

include("Sixel_CModule.jl") # generated by Clang.jl
using .C

# The julia part of API that hides all C details
include("encoder.jl")

# TODO: create a julia struct for encoder, and pass more informations
function __init__()
    _check_encoder!(DEFAULT_ENCODER; verbose=false)
end

end
